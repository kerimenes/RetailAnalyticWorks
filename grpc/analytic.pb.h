// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: analytic.proto

#ifndef PROTOBUF_analytic_2eproto__INCLUDED
#define PROTOBUF_analytic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_analytic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPersonDetailsImpl();
void InitDefaultsPersonDetails();
void InitDefaultsPersonImpl();
void InitDefaultsPerson();
void InitDefaultsDepartmentImpl();
void InitDefaultsDepartment();
void InitDefaultsProductDetailsImpl();
void InitDefaultsProductDetails();
void InitDefaultsProductImpl();
void InitDefaultsProduct();
void InitDefaultsStoreImpl();
void InitDefaultsStore();
void InitDefaultsLocationDetailsImpl();
void InitDefaultsLocationDetails();
void InitDefaultsLocationImpl();
void InitDefaultsLocation();
void InitDefaultsPersonDataImpl();
void InitDefaultsPersonData();
void InitDefaultsEmployeeDataImpl();
void InitDefaultsEmployeeData();
void InitDefaultsCustomerDetailsImpl();
void InitDefaultsCustomerDetails();
void InitDefaultsCustomerDataImpl();
void InitDefaultsCustomerData();
void InitDefaultsSalesDetailsImpl();
void InitDefaultsSalesDetails();
void InitDefaultsSalesDataImpl();
void InitDefaultsSalesData();
inline void InitDefaults() {
  InitDefaultsPersonDetails();
  InitDefaultsPerson();
  InitDefaultsDepartment();
  InitDefaultsProductDetails();
  InitDefaultsProduct();
  InitDefaultsStore();
  InitDefaultsLocationDetails();
  InitDefaultsLocation();
  InitDefaultsPersonData();
  InitDefaultsEmployeeData();
  InitDefaultsCustomerDetails();
  InitDefaultsCustomerData();
  InitDefaultsSalesDetails();
  InitDefaultsSalesData();
}
}  // namespace protobuf_analytic_2eproto
namespace retail {
namespace yca {
class CustomerData;
class CustomerDataDefaultTypeInternal;
extern CustomerDataDefaultTypeInternal _CustomerData_default_instance_;
class CustomerDetails;
class CustomerDetailsDefaultTypeInternal;
extern CustomerDetailsDefaultTypeInternal _CustomerDetails_default_instance_;
class Department;
class DepartmentDefaultTypeInternal;
extern DepartmentDefaultTypeInternal _Department_default_instance_;
class EmployeeData;
class EmployeeDataDefaultTypeInternal;
extern EmployeeDataDefaultTypeInternal _EmployeeData_default_instance_;
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class LocationDetails;
class LocationDetailsDefaultTypeInternal;
extern LocationDetailsDefaultTypeInternal _LocationDetails_default_instance_;
class Person;
class PersonDefaultTypeInternal;
extern PersonDefaultTypeInternal _Person_default_instance_;
class PersonData;
class PersonDataDefaultTypeInternal;
extern PersonDataDefaultTypeInternal _PersonData_default_instance_;
class PersonDetails;
class PersonDetailsDefaultTypeInternal;
extern PersonDetailsDefaultTypeInternal _PersonDetails_default_instance_;
class Product;
class ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class ProductDetails;
class ProductDetailsDefaultTypeInternal;
extern ProductDetailsDefaultTypeInternal _ProductDetails_default_instance_;
class SalesData;
class SalesDataDefaultTypeInternal;
extern SalesDataDefaultTypeInternal _SalesData_default_instance_;
class SalesDetails;
class SalesDetailsDefaultTypeInternal;
extern SalesDetailsDefaultTypeInternal _SalesDetails_default_instance_;
class Store;
class StoreDefaultTypeInternal;
extern StoreDefaultTypeInternal _Store_default_instance_;
}  // namespace yca
}  // namespace retail
namespace retail {
namespace yca {

enum PersonDetails_Gender {
  PersonDetails_Gender_WOMAN = 0,
  PersonDetails_Gender_MAN = 1,
  PersonDetails_Gender_PersonDetails_Gender_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PersonDetails_Gender_PersonDetails_Gender_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PersonDetails_Gender_IsValid(int value);
const PersonDetails_Gender PersonDetails_Gender_Gender_MIN = PersonDetails_Gender_WOMAN;
const PersonDetails_Gender PersonDetails_Gender_Gender_MAX = PersonDetails_Gender_MAN;
const int PersonDetails_Gender_Gender_ARRAYSIZE = PersonDetails_Gender_Gender_MAX + 1;

const ::google::protobuf::EnumDescriptor* PersonDetails_Gender_descriptor();
inline const ::std::string& PersonDetails_Gender_Name(PersonDetails_Gender value) {
  return ::google::protobuf::internal::NameOfEnum(
    PersonDetails_Gender_descriptor(), value);
}
inline bool PersonDetails_Gender_Parse(
    const ::std::string& name, PersonDetails_Gender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PersonDetails_Gender>(
    PersonDetails_Gender_descriptor(), name, value);
}
enum CustomerDetails_CustomerMood {
  CustomerDetails_CustomerMood_Happy = 0,
  CustomerDetails_CustomerMood_Sad = 1,
  CustomerDetails_CustomerMood_CustomerDetails_CustomerMood_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CustomerDetails_CustomerMood_CustomerDetails_CustomerMood_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CustomerDetails_CustomerMood_IsValid(int value);
const CustomerDetails_CustomerMood CustomerDetails_CustomerMood_CustomerMood_MIN = CustomerDetails_CustomerMood_Happy;
const CustomerDetails_CustomerMood CustomerDetails_CustomerMood_CustomerMood_MAX = CustomerDetails_CustomerMood_Sad;
const int CustomerDetails_CustomerMood_CustomerMood_ARRAYSIZE = CustomerDetails_CustomerMood_CustomerMood_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomerDetails_CustomerMood_descriptor();
inline const ::std::string& CustomerDetails_CustomerMood_Name(CustomerDetails_CustomerMood value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomerDetails_CustomerMood_descriptor(), value);
}
inline bool CustomerDetails_CustomerMood_Parse(
    const ::std::string& name, CustomerDetails_CustomerMood* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomerDetails_CustomerMood>(
    CustomerDetails_CustomerMood_descriptor(), name, value);
}
enum CustomerDetails_Action {
  CustomerDetails_Action_Inside = 0,
  CustomerDetails_Action_Pass = 1,
  CustomerDetails_Action_Look = 2,
  CustomerDetails_Action_CustomerDetails_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CustomerDetails_Action_CustomerDetails_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CustomerDetails_Action_IsValid(int value);
const CustomerDetails_Action CustomerDetails_Action_Action_MIN = CustomerDetails_Action_Inside;
const CustomerDetails_Action CustomerDetails_Action_Action_MAX = CustomerDetails_Action_Look;
const int CustomerDetails_Action_Action_ARRAYSIZE = CustomerDetails_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomerDetails_Action_descriptor();
inline const ::std::string& CustomerDetails_Action_Name(CustomerDetails_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomerDetails_Action_descriptor(), value);
}
inline bool CustomerDetails_Action_Parse(
    const ::std::string& name, CustomerDetails_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomerDetails_Action>(
    CustomerDetails_Action_descriptor(), name, value);
}
enum AttentionDirection {
  NORTH = 0,
  EAST = 1,
  SOUTH = 2,
  WEST = 3,
  AttentionDirection_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AttentionDirection_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AttentionDirection_IsValid(int value);
const AttentionDirection AttentionDirection_MIN = NORTH;
const AttentionDirection AttentionDirection_MAX = WEST;
const int AttentionDirection_ARRAYSIZE = AttentionDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* AttentionDirection_descriptor();
inline const ::std::string& AttentionDirection_Name(AttentionDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    AttentionDirection_descriptor(), value);
}
inline bool AttentionDirection_Parse(
    const ::std::string& name, AttentionDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AttentionDirection>(
    AttentionDirection_descriptor(), name, value);
}
enum EmployeeAction {
  UNKNOWN = 0,
  CUSTOMER = 1,
  STORE = 2,
  INSTAGRAM = 3,
  EmployeeAction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EmployeeAction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EmployeeAction_IsValid(int value);
const EmployeeAction EmployeeAction_MIN = UNKNOWN;
const EmployeeAction EmployeeAction_MAX = INSTAGRAM;
const int EmployeeAction_ARRAYSIZE = EmployeeAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EmployeeAction_descriptor();
inline const ::std::string& EmployeeAction_Name(EmployeeAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EmployeeAction_descriptor(), value);
}
inline bool EmployeeAction_Parse(
    const ::std::string& name, EmployeeAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EmployeeAction>(
    EmployeeAction_descriptor(), name, value);
}
// ===================================================================

class PersonDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.PersonDetails) */ {
 public:
  PersonDetails();
  virtual ~PersonDetails();

  PersonDetails(const PersonDetails& from);

  inline PersonDetails& operator=(const PersonDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PersonDetails(PersonDetails&& from) noexcept
    : PersonDetails() {
    *this = ::std::move(from);
  }

  inline PersonDetails& operator=(PersonDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PersonDetails* internal_default_instance() {
    return reinterpret_cast<const PersonDetails*>(
               &_PersonDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PersonDetails* other);
  friend void swap(PersonDetails& a, PersonDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PersonDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  PersonDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PersonDetails& from);
  void MergeFrom(const PersonDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PersonDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PersonDetails_Gender Gender;
  static const Gender WOMAN =
    PersonDetails_Gender_WOMAN;
  static const Gender MAN =
    PersonDetails_Gender_MAN;
  static inline bool Gender_IsValid(int value) {
    return PersonDetails_Gender_IsValid(value);
  }
  static const Gender Gender_MIN =
    PersonDetails_Gender_Gender_MIN;
  static const Gender Gender_MAX =
    PersonDetails_Gender_Gender_MAX;
  static const int Gender_ARRAYSIZE =
    PersonDetails_Gender_Gender_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Gender_descriptor() {
    return PersonDetails_Gender_descriptor();
  }
  static inline const ::std::string& Gender_Name(Gender value) {
    return PersonDetails_Gender_Name(value);
  }
  static inline bool Gender_Parse(const ::std::string& name,
      Gender* value) {
    return PersonDetails_Gender_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string email = 7;
  void clear_email();
  static const int kEmailFieldNumber = 7;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // .retail.yca.PersonDetails.Gender gender = 2;
  void clear_gender();
  static const int kGenderFieldNumber = 2;
  ::retail::yca::PersonDetails_Gender gender() const;
  void set_gender(::retail::yca::PersonDetails_Gender value);

  // int32 age = 4;
  void clear_age();
  static const int kAgeFieldNumber = 4;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // int32 weight = 5;
  void clear_weight();
  static const int kWeightFieldNumber = 5;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // int32 height = 6;
  void clear_height();
  static const int kHeightFieldNumber = 6;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // bool isPlayingAgeof = 8;
  void clear_isplayingageof();
  static const int kIsPlayingAgeofFieldNumber = 8;
  bool isplayingageof() const;
  void set_isplayingageof(bool value);

  // @@protoc_insertion_point(class_scope:retail.yca.PersonDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  int gender_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 weight_;
  ::google::protobuf::int32 height_;
  bool isplayingageof_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsPersonDetailsImpl();
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.Person) */ {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Person(Person&& from) noexcept
    : Person() {
    *this = ::std::move(from);
  }

  inline Person& operator=(Person&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Person* internal_default_instance() {
    return reinterpret_cast<const Person*>(
               &_Person_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Person* other);
  friend void swap(Person& a, Person& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Person* New() const PROTOBUF_FINAL { return New(NULL); }

  Person* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Person* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .retail.yca.PersonDetails details = 2;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 2;
  const ::retail::yca::PersonDetails& details() const;
  ::retail::yca::PersonDetails* release_details();
  ::retail::yca::PersonDetails* mutable_details();
  void set_allocated_details(::retail::yca::PersonDetails* details);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:retail.yca.Person)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::retail::yca::PersonDetails* details_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsPersonImpl();
};
// -------------------------------------------------------------------

class Department : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.Department) */ {
 public:
  Department();
  virtual ~Department();

  Department(const Department& from);

  inline Department& operator=(const Department& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Department(Department&& from) noexcept
    : Department() {
    *this = ::std::move(from);
  }

  inline Department& operator=(Department&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Department& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Department* internal_default_instance() {
    return reinterpret_cast<const Department*>(
               &_Department_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Department* other);
  friend void swap(Department& a, Department& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Department* New() const PROTOBUF_FINAL { return New(NULL); }

  Department* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Department& from);
  void MergeFrom(const Department& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Department* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .retail.yca.Location loc = 2;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 2;
  const ::retail::yca::Location& loc() const;
  ::retail::yca::Location* release_loc();
  ::retail::yca::Location* mutable_loc();
  void set_allocated_loc(::retail::yca::Location* loc);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.Department)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::retail::yca::Location* loc_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsDepartmentImpl();
};
// -------------------------------------------------------------------

class ProductDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.ProductDetails) */ {
 public:
  ProductDetails();
  virtual ~ProductDetails();

  ProductDetails(const ProductDetails& from);

  inline ProductDetails& operator=(const ProductDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductDetails(ProductDetails&& from) noexcept
    : ProductDetails() {
    *this = ::std::move(from);
  }

  inline ProductDetails& operator=(ProductDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProductDetails* internal_default_instance() {
    return reinterpret_cast<const ProductDetails*>(
               &_ProductDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ProductDetails* other);
  friend void swap(ProductDetails& a, ProductDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductDetails& from);
  void MergeFrom(const ProductDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 depid = 1;
  void clear_depid();
  static const int kDepidFieldNumber = 1;
  ::google::protobuf::int32 depid() const;
  void set_depid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.ProductDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 depid_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsProductDetailsImpl();
};
// -------------------------------------------------------------------

class Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Product(Product&& from) noexcept
    : Product() {
    *this = ::std::move(from);
  }

  inline Product& operator=(Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Product& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Product* other);
  friend void swap(Product& a, Product& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Product* New() const PROTOBUF_FINAL { return New(NULL); }

  Product* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Product* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .retail.yca.ProductDetails details = 2;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 2;
  const ::retail::yca::ProductDetails& details() const;
  ::retail::yca::ProductDetails* release_details();
  ::retail::yca::ProductDetails* mutable_details();
  void set_allocated_details(::retail::yca::ProductDetails* details);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.Product)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::retail::yca::ProductDetails* details_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsProductImpl();
};
// -------------------------------------------------------------------

class Store : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.Store) */ {
 public:
  Store();
  virtual ~Store();

  Store(const Store& from);

  inline Store& operator=(const Store& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Store(Store&& from) noexcept
    : Store() {
    *this = ::std::move(from);
  }

  inline Store& operator=(Store&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Store& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Store* internal_default_instance() {
    return reinterpret_cast<const Store*>(
               &_Store_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Store* other);
  friend void swap(Store& a, Store& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Store* New() const PROTOBUF_FINAL { return New(NULL); }

  Store* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Store& from);
  void MergeFrom(const Store& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Store* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .retail.yca.Department deps = 2;
  int deps_size() const;
  void clear_deps();
  static const int kDepsFieldNumber = 2;
  const ::retail::yca::Department& deps(int index) const;
  ::retail::yca::Department* mutable_deps(int index);
  ::retail::yca::Department* add_deps();
  ::google::protobuf::RepeatedPtrField< ::retail::yca::Department >*
      mutable_deps();
  const ::google::protobuf::RepeatedPtrField< ::retail::yca::Department >&
      deps() const;

  // repeated .retail.yca.Person workers = 3;
  int workers_size() const;
  void clear_workers();
  static const int kWorkersFieldNumber = 3;
  const ::retail::yca::Person& workers(int index) const;
  ::retail::yca::Person* mutable_workers(int index);
  ::retail::yca::Person* add_workers();
  ::google::protobuf::RepeatedPtrField< ::retail::yca::Person >*
      mutable_workers();
  const ::google::protobuf::RepeatedPtrField< ::retail::yca::Person >&
      workers() const;

  // repeated .retail.yca.Product products = 4;
  int products_size() const;
  void clear_products();
  static const int kProductsFieldNumber = 4;
  const ::retail::yca::Product& products(int index) const;
  ::retail::yca::Product* mutable_products(int index);
  ::retail::yca::Product* add_products();
  ::google::protobuf::RepeatedPtrField< ::retail::yca::Product >*
      mutable_products();
  const ::google::protobuf::RepeatedPtrField< ::retail::yca::Product >&
      products() const;

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.Store)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::retail::yca::Department > deps_;
  ::google::protobuf::RepeatedPtrField< ::retail::yca::Person > workers_;
  ::google::protobuf::RepeatedPtrField< ::retail::yca::Product > products_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsStoreImpl();
};
// -------------------------------------------------------------------

class LocationDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.LocationDetails) */ {
 public:
  LocationDetails();
  virtual ~LocationDetails();

  LocationDetails(const LocationDetails& from);

  inline LocationDetails& operator=(const LocationDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationDetails(LocationDetails&& from) noexcept
    : LocationDetails() {
    *this = ::std::move(from);
  }

  inline LocationDetails& operator=(LocationDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationDetails* internal_default_instance() {
    return reinterpret_cast<const LocationDetails*>(
               &_LocationDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(LocationDetails* other);
  friend void swap(LocationDetails& a, LocationDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  LocationDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocationDetails& from);
  void MergeFrom(const LocationDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocationDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 store = 1;
  void clear_store();
  static const int kStoreFieldNumber = 1;
  ::google::protobuf::int32 store() const;
  void set_store(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.LocationDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 store_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsLocationDetailsImpl();
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const PROTOBUF_FINAL { return New(NULL); }

  Location* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .retail.yca.LocationDetails details = 4;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 4;
  const ::retail::yca::LocationDetails& details() const;
  ::retail::yca::LocationDetails* release_details();
  ::retail::yca::LocationDetails* mutable_details();
  void set_allocated_details(::retail::yca::LocationDetails* details);

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:retail.yca.Location)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::retail::yca::LocationDetails* details_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsLocationImpl();
};
// -------------------------------------------------------------------

class PersonData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.PersonData) */ {
 public:
  PersonData();
  virtual ~PersonData();

  PersonData(const PersonData& from);

  inline PersonData& operator=(const PersonData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PersonData(PersonData&& from) noexcept
    : PersonData() {
    *this = ::std::move(from);
  }

  inline PersonData& operator=(PersonData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PersonData* internal_default_instance() {
    return reinterpret_cast<const PersonData*>(
               &_PersonData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PersonData* other);
  friend void swap(PersonData& a, PersonData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PersonData* New() const PROTOBUF_FINAL { return New(NULL); }

  PersonData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PersonData& from);
  void MergeFrom(const PersonData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PersonData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string image = 4;
  void clear_image();
  static const int kImageFieldNumber = 4;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const char* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // .retail.yca.Location loc = 1;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 1;
  const ::retail::yca::Location& loc() const;
  ::retail::yca::Location* release_loc();
  ::retail::yca::Location* mutable_loc();
  void set_allocated_loc(::retail::yca::Location* loc);

  // int64 ts = 2;
  void clear_ts();
  static const int kTsFieldNumber = 2;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // int64 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:retail.yca.PersonData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::retail::yca::Location* loc_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsPersonDataImpl();
};
// -------------------------------------------------------------------

class EmployeeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.EmployeeData) */ {
 public:
  EmployeeData();
  virtual ~EmployeeData();

  EmployeeData(const EmployeeData& from);

  inline EmployeeData& operator=(const EmployeeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmployeeData(EmployeeData&& from) noexcept
    : EmployeeData() {
    *this = ::std::move(from);
  }

  inline EmployeeData& operator=(EmployeeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmployeeData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmployeeData* internal_default_instance() {
    return reinterpret_cast<const EmployeeData*>(
               &_EmployeeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(EmployeeData* other);
  friend void swap(EmployeeData& a, EmployeeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmployeeData* New() const PROTOBUF_FINAL { return New(NULL); }

  EmployeeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmployeeData& from);
  void MergeFrom(const EmployeeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmployeeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .retail.yca.PersonData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::retail::yca::PersonData& data() const;
  ::retail::yca::PersonData* release_data();
  ::retail::yca::PersonData* mutable_data();
  void set_allocated_data(::retail::yca::PersonData* data);

  // .retail.yca.PersonDetails details = 3;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 3;
  const ::retail::yca::PersonDetails& details() const;
  ::retail::yca::PersonDetails* release_details();
  ::retail::yca::PersonDetails* mutable_details();
  void set_allocated_details(::retail::yca::PersonDetails* details);

  // .retail.yca.EmployeeAction action = 2;
  void clear_action();
  static const int kActionFieldNumber = 2;
  ::retail::yca::EmployeeAction action() const;
  void set_action(::retail::yca::EmployeeAction value);

  // @@protoc_insertion_point(class_scope:retail.yca.EmployeeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::retail::yca::PersonData* data_;
  ::retail::yca::PersonDetails* details_;
  int action_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsEmployeeDataImpl();
};
// -------------------------------------------------------------------

class CustomerDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.CustomerDetails) */ {
 public:
  CustomerDetails();
  virtual ~CustomerDetails();

  CustomerDetails(const CustomerDetails& from);

  inline CustomerDetails& operator=(const CustomerDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomerDetails(CustomerDetails&& from) noexcept
    : CustomerDetails() {
    *this = ::std::move(from);
  }

  inline CustomerDetails& operator=(CustomerDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomerDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomerDetails* internal_default_instance() {
    return reinterpret_cast<const CustomerDetails*>(
               &_CustomerDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CustomerDetails* other);
  friend void swap(CustomerDetails& a, CustomerDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomerDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomerDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomerDetails& from);
  void MergeFrom(const CustomerDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomerDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CustomerDetails_CustomerMood CustomerMood;
  static const CustomerMood Happy =
    CustomerDetails_CustomerMood_Happy;
  static const CustomerMood Sad =
    CustomerDetails_CustomerMood_Sad;
  static inline bool CustomerMood_IsValid(int value) {
    return CustomerDetails_CustomerMood_IsValid(value);
  }
  static const CustomerMood CustomerMood_MIN =
    CustomerDetails_CustomerMood_CustomerMood_MIN;
  static const CustomerMood CustomerMood_MAX =
    CustomerDetails_CustomerMood_CustomerMood_MAX;
  static const int CustomerMood_ARRAYSIZE =
    CustomerDetails_CustomerMood_CustomerMood_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CustomerMood_descriptor() {
    return CustomerDetails_CustomerMood_descriptor();
  }
  static inline const ::std::string& CustomerMood_Name(CustomerMood value) {
    return CustomerDetails_CustomerMood_Name(value);
  }
  static inline bool CustomerMood_Parse(const ::std::string& name,
      CustomerMood* value) {
    return CustomerDetails_CustomerMood_Parse(name, value);
  }

  typedef CustomerDetails_Action Action;
  static const Action Inside =
    CustomerDetails_Action_Inside;
  static const Action Pass =
    CustomerDetails_Action_Pass;
  static const Action Look =
    CustomerDetails_Action_Look;
  static inline bool Action_IsValid(int value) {
    return CustomerDetails_Action_IsValid(value);
  }
  static const Action Action_MIN =
    CustomerDetails_Action_Action_MIN;
  static const Action Action_MAX =
    CustomerDetails_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    CustomerDetails_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return CustomerDetails_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return CustomerDetails_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return CustomerDetails_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .retail.yca.CustomerDetails.CustomerMood mood = 1;
  void clear_mood();
  static const int kMoodFieldNumber = 1;
  ::retail::yca::CustomerDetails_CustomerMood mood() const;
  void set_mood(::retail::yca::CustomerDetails_CustomerMood value);

  // @@protoc_insertion_point(class_scope:retail.yca.CustomerDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mood_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsCustomerDetailsImpl();
};
// -------------------------------------------------------------------

class CustomerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.CustomerData) */ {
 public:
  CustomerData();
  virtual ~CustomerData();

  CustomerData(const CustomerData& from);

  inline CustomerData& operator=(const CustomerData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomerData(CustomerData&& from) noexcept
    : CustomerData() {
    *this = ::std::move(from);
  }

  inline CustomerData& operator=(CustomerData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomerData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomerData* internal_default_instance() {
    return reinterpret_cast<const CustomerData*>(
               &_CustomerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CustomerData* other);
  friend void swap(CustomerData& a, CustomerData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomerData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomerData& from);
  void MergeFrom(const CustomerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .retail.yca.PersonData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::retail::yca::PersonData& data() const;
  ::retail::yca::PersonData* release_data();
  ::retail::yca::PersonData* mutable_data();
  void set_allocated_data(::retail::yca::PersonData* data);

  // .retail.yca.CustomerDetails details = 3;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 3;
  const ::retail::yca::CustomerDetails& details() const;
  ::retail::yca::CustomerDetails* release_details();
  ::retail::yca::CustomerDetails* mutable_details();
  void set_allocated_details(::retail::yca::CustomerDetails* details);

  // .retail.yca.AttentionDirection direction = 2;
  void clear_direction();
  static const int kDirectionFieldNumber = 2;
  ::retail::yca::AttentionDirection direction() const;
  void set_direction(::retail::yca::AttentionDirection value);

  // @@protoc_insertion_point(class_scope:retail.yca.CustomerData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::retail::yca::PersonData* data_;
  ::retail::yca::CustomerDetails* details_;
  int direction_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsCustomerDataImpl();
};
// -------------------------------------------------------------------

class SalesDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.SalesDetails) */ {
 public:
  SalesDetails();
  virtual ~SalesDetails();

  SalesDetails(const SalesDetails& from);

  inline SalesDetails& operator=(const SalesDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SalesDetails(SalesDetails&& from) noexcept
    : SalesDetails() {
    *this = ::std::move(from);
  }

  inline SalesDetails& operator=(SalesDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SalesDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SalesDetails* internal_default_instance() {
    return reinterpret_cast<const SalesDetails*>(
               &_SalesDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SalesDetails* other);
  friend void swap(SalesDetails& a, SalesDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SalesDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  SalesDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SalesDetails& from);
  void MergeFrom(const SalesDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SalesDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 ts = 2;
  void clear_ts();
  static const int kTsFieldNumber = 2;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // int32 store = 1;
  void clear_store();
  static const int kStoreFieldNumber = 1;
  ::google::protobuf::int32 store() const;
  void set_store(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.SalesDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int32 store_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsSalesDetailsImpl();
};
// -------------------------------------------------------------------

class SalesData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:retail.yca.SalesData) */ {
 public:
  SalesData();
  virtual ~SalesData();

  SalesData(const SalesData& from);

  inline SalesData& operator=(const SalesData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SalesData(SalesData&& from) noexcept
    : SalesData() {
    *this = ::std::move(from);
  }

  inline SalesData& operator=(SalesData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SalesData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SalesData* internal_default_instance() {
    return reinterpret_cast<const SalesData*>(
               &_SalesData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SalesData* other);
  friend void swap(SalesData& a, SalesData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SalesData* New() const PROTOBUF_FINAL { return New(NULL); }

  SalesData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SalesData& from);
  void MergeFrom(const SalesData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SalesData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 products = 1;
  int products_size() const;
  void clear_products();
  static const int kProductsFieldNumber = 1;
  ::google::protobuf::int32 products(int index) const;
  void set_products(int index, ::google::protobuf::int32 value);
  void add_products(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      products() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_products();

  // .retail.yca.SalesDetails details = 4;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 4;
  const ::retail::yca::SalesDetails& details() const;
  ::retail::yca::SalesDetails* release_details();
  ::retail::yca::SalesDetails* mutable_details();
  void set_allocated_details(::retail::yca::SalesDetails* details);

  // int32 customer = 2;
  void clear_customer();
  static const int kCustomerFieldNumber = 2;
  ::google::protobuf::int32 customer() const;
  void set_customer(::google::protobuf::int32 value);

  // int32 employee = 3;
  void clear_employee();
  static const int kEmployeeFieldNumber = 3;
  ::google::protobuf::int32 employee() const;
  void set_employee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:retail.yca.SalesData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > products_;
  mutable int _products_cached_byte_size_;
  ::retail::yca::SalesDetails* details_;
  ::google::protobuf::int32 customer_;
  ::google::protobuf::int32 employee_;
  mutable int _cached_size_;
  friend struct ::protobuf_analytic_2eproto::TableStruct;
  friend void ::protobuf_analytic_2eproto::InitDefaultsSalesDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PersonDetails

// .retail.yca.PersonDetails.Gender gender = 2;
inline void PersonDetails::clear_gender() {
  gender_ = 0;
}
inline ::retail::yca::PersonDetails_Gender PersonDetails::gender() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.gender)
  return static_cast< ::retail::yca::PersonDetails_Gender >(gender_);
}
inline void PersonDetails::set_gender(::retail::yca::PersonDetails_Gender value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.gender)
}

// string name = 3;
inline void PersonDetails::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PersonDetails::name() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.name)
  return name_.GetNoArena();
}
inline void PersonDetails::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.name)
}
#if LANG_CXX11
inline void PersonDetails::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:retail.yca.PersonDetails.name)
}
#endif
inline void PersonDetails::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:retail.yca.PersonDetails.name)
}
inline void PersonDetails::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:retail.yca.PersonDetails.name)
}
inline ::std::string* PersonDetails::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:retail.yca.PersonDetails.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PersonDetails::release_name() {
  // @@protoc_insertion_point(field_release:retail.yca.PersonDetails.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PersonDetails::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:retail.yca.PersonDetails.name)
}

// int32 age = 4;
inline void PersonDetails::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 PersonDetails::age() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.age)
  return age_;
}
inline void PersonDetails::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.age)
}

// int32 weight = 5;
inline void PersonDetails::clear_weight() {
  weight_ = 0;
}
inline ::google::protobuf::int32 PersonDetails::weight() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.weight)
  return weight_;
}
inline void PersonDetails::set_weight(::google::protobuf::int32 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.weight)
}

// int32 height = 6;
inline void PersonDetails::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 PersonDetails::height() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.height)
  return height_;
}
inline void PersonDetails::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.height)
}

// string email = 7;
inline void PersonDetails::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PersonDetails::email() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.email)
  return email_.GetNoArena();
}
inline void PersonDetails::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.email)
}
#if LANG_CXX11
inline void PersonDetails::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:retail.yca.PersonDetails.email)
}
#endif
inline void PersonDetails::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:retail.yca.PersonDetails.email)
}
inline void PersonDetails::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:retail.yca.PersonDetails.email)
}
inline ::std::string* PersonDetails::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:retail.yca.PersonDetails.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PersonDetails::release_email() {
  // @@protoc_insertion_point(field_release:retail.yca.PersonDetails.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PersonDetails::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:retail.yca.PersonDetails.email)
}

// bool isPlayingAgeof = 8;
inline void PersonDetails::clear_isplayingageof() {
  isplayingageof_ = false;
}
inline bool PersonDetails::isplayingageof() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonDetails.isPlayingAgeof)
  return isplayingageof_;
}
inline void PersonDetails::set_isplayingageof(bool value) {
  
  isplayingageof_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonDetails.isPlayingAgeof)
}

// -------------------------------------------------------------------

// Person

// int64 id = 1;
inline void Person::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Person::id() const {
  // @@protoc_insertion_point(field_get:retail.yca.Person.id)
  return id_;
}
inline void Person::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Person.id)
}

// .retail.yca.PersonDetails details = 2;
inline bool Person::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void Person::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
inline const ::retail::yca::PersonDetails& Person::details() const {
  const ::retail::yca::PersonDetails* p = details_;
  // @@protoc_insertion_point(field_get:retail.yca.Person.details)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::PersonDetails*>(
      &::retail::yca::_PersonDetails_default_instance_);
}
inline ::retail::yca::PersonDetails* Person::release_details() {
  // @@protoc_insertion_point(field_release:retail.yca.Person.details)
  
  ::retail::yca::PersonDetails* temp = details_;
  details_ = NULL;
  return temp;
}
inline ::retail::yca::PersonDetails* Person::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::retail::yca::PersonDetails;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.Person.details)
  return details_;
}
inline void Person::set_allocated_details(::retail::yca::PersonDetails* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.Person.details)
}

// -------------------------------------------------------------------

// Department

// int32 id = 1;
inline void Department::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Department::id() const {
  // @@protoc_insertion_point(field_get:retail.yca.Department.id)
  return id_;
}
inline void Department::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Department.id)
}

// .retail.yca.Location loc = 2;
inline bool Department::has_loc() const {
  return this != internal_default_instance() && loc_ != NULL;
}
inline void Department::clear_loc() {
  if (GetArenaNoVirtual() == NULL && loc_ != NULL) {
    delete loc_;
  }
  loc_ = NULL;
}
inline const ::retail::yca::Location& Department::loc() const {
  const ::retail::yca::Location* p = loc_;
  // @@protoc_insertion_point(field_get:retail.yca.Department.loc)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::Location*>(
      &::retail::yca::_Location_default_instance_);
}
inline ::retail::yca::Location* Department::release_loc() {
  // @@protoc_insertion_point(field_release:retail.yca.Department.loc)
  
  ::retail::yca::Location* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline ::retail::yca::Location* Department::mutable_loc() {
  
  if (loc_ == NULL) {
    loc_ = new ::retail::yca::Location;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.Department.loc)
  return loc_;
}
inline void Department::set_allocated_loc(::retail::yca::Location* loc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loc_;
  }
  if (loc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc, submessage_arena);
    }
    
  } else {
    
  }
  loc_ = loc;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.Department.loc)
}

// -------------------------------------------------------------------

// ProductDetails

// int32 depid = 1;
inline void ProductDetails::clear_depid() {
  depid_ = 0;
}
inline ::google::protobuf::int32 ProductDetails::depid() const {
  // @@protoc_insertion_point(field_get:retail.yca.ProductDetails.depid)
  return depid_;
}
inline void ProductDetails::set_depid(::google::protobuf::int32 value) {
  
  depid_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.ProductDetails.depid)
}

// -------------------------------------------------------------------

// Product

// int32 id = 1;
inline void Product::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Product::id() const {
  // @@protoc_insertion_point(field_get:retail.yca.Product.id)
  return id_;
}
inline void Product::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Product.id)
}

// .retail.yca.ProductDetails details = 2;
inline bool Product::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void Product::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
inline const ::retail::yca::ProductDetails& Product::details() const {
  const ::retail::yca::ProductDetails* p = details_;
  // @@protoc_insertion_point(field_get:retail.yca.Product.details)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::ProductDetails*>(
      &::retail::yca::_ProductDetails_default_instance_);
}
inline ::retail::yca::ProductDetails* Product::release_details() {
  // @@protoc_insertion_point(field_release:retail.yca.Product.details)
  
  ::retail::yca::ProductDetails* temp = details_;
  details_ = NULL;
  return temp;
}
inline ::retail::yca::ProductDetails* Product::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::retail::yca::ProductDetails;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.Product.details)
  return details_;
}
inline void Product::set_allocated_details(::retail::yca::ProductDetails* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.Product.details)
}

// -------------------------------------------------------------------

// Store

// int32 id = 1;
inline void Store::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Store::id() const {
  // @@protoc_insertion_point(field_get:retail.yca.Store.id)
  return id_;
}
inline void Store::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Store.id)
}

// repeated .retail.yca.Department deps = 2;
inline int Store::deps_size() const {
  return deps_.size();
}
inline void Store::clear_deps() {
  deps_.Clear();
}
inline const ::retail::yca::Department& Store::deps(int index) const {
  // @@protoc_insertion_point(field_get:retail.yca.Store.deps)
  return deps_.Get(index);
}
inline ::retail::yca::Department* Store::mutable_deps(int index) {
  // @@protoc_insertion_point(field_mutable:retail.yca.Store.deps)
  return deps_.Mutable(index);
}
inline ::retail::yca::Department* Store::add_deps() {
  // @@protoc_insertion_point(field_add:retail.yca.Store.deps)
  return deps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::retail::yca::Department >*
Store::mutable_deps() {
  // @@protoc_insertion_point(field_mutable_list:retail.yca.Store.deps)
  return &deps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::retail::yca::Department >&
Store::deps() const {
  // @@protoc_insertion_point(field_list:retail.yca.Store.deps)
  return deps_;
}

// repeated .retail.yca.Person workers = 3;
inline int Store::workers_size() const {
  return workers_.size();
}
inline void Store::clear_workers() {
  workers_.Clear();
}
inline const ::retail::yca::Person& Store::workers(int index) const {
  // @@protoc_insertion_point(field_get:retail.yca.Store.workers)
  return workers_.Get(index);
}
inline ::retail::yca::Person* Store::mutable_workers(int index) {
  // @@protoc_insertion_point(field_mutable:retail.yca.Store.workers)
  return workers_.Mutable(index);
}
inline ::retail::yca::Person* Store::add_workers() {
  // @@protoc_insertion_point(field_add:retail.yca.Store.workers)
  return workers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::retail::yca::Person >*
Store::mutable_workers() {
  // @@protoc_insertion_point(field_mutable_list:retail.yca.Store.workers)
  return &workers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::retail::yca::Person >&
Store::workers() const {
  // @@protoc_insertion_point(field_list:retail.yca.Store.workers)
  return workers_;
}

// repeated .retail.yca.Product products = 4;
inline int Store::products_size() const {
  return products_.size();
}
inline void Store::clear_products() {
  products_.Clear();
}
inline const ::retail::yca::Product& Store::products(int index) const {
  // @@protoc_insertion_point(field_get:retail.yca.Store.products)
  return products_.Get(index);
}
inline ::retail::yca::Product* Store::mutable_products(int index) {
  // @@protoc_insertion_point(field_mutable:retail.yca.Store.products)
  return products_.Mutable(index);
}
inline ::retail::yca::Product* Store::add_products() {
  // @@protoc_insertion_point(field_add:retail.yca.Store.products)
  return products_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::retail::yca::Product >*
Store::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:retail.yca.Store.products)
  return &products_;
}
inline const ::google::protobuf::RepeatedPtrField< ::retail::yca::Product >&
Store::products() const {
  // @@protoc_insertion_point(field_list:retail.yca.Store.products)
  return products_;
}

// -------------------------------------------------------------------

// LocationDetails

// int32 store = 1;
inline void LocationDetails::clear_store() {
  store_ = 0;
}
inline ::google::protobuf::int32 LocationDetails::store() const {
  // @@protoc_insertion_point(field_get:retail.yca.LocationDetails.store)
  return store_;
}
inline void LocationDetails::set_store(::google::protobuf::int32 value) {
  
  store_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.LocationDetails.store)
}

// -------------------------------------------------------------------

// Location

// float x = 1;
inline void Location::clear_x() {
  x_ = 0;
}
inline float Location::x() const {
  // @@protoc_insertion_point(field_get:retail.yca.Location.x)
  return x_;
}
inline void Location::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Location.x)
}

// float y = 2;
inline void Location::clear_y() {
  y_ = 0;
}
inline float Location::y() const {
  // @@protoc_insertion_point(field_get:retail.yca.Location.y)
  return y_;
}
inline void Location::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Location.y)
}

// float z = 3;
inline void Location::clear_z() {
  z_ = 0;
}
inline float Location::z() const {
  // @@protoc_insertion_point(field_get:retail.yca.Location.z)
  return z_;
}
inline void Location::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.Location.z)
}

// .retail.yca.LocationDetails details = 4;
inline bool Location::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void Location::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
inline const ::retail::yca::LocationDetails& Location::details() const {
  const ::retail::yca::LocationDetails* p = details_;
  // @@protoc_insertion_point(field_get:retail.yca.Location.details)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::LocationDetails*>(
      &::retail::yca::_LocationDetails_default_instance_);
}
inline ::retail::yca::LocationDetails* Location::release_details() {
  // @@protoc_insertion_point(field_release:retail.yca.Location.details)
  
  ::retail::yca::LocationDetails* temp = details_;
  details_ = NULL;
  return temp;
}
inline ::retail::yca::LocationDetails* Location::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::retail::yca::LocationDetails;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.Location.details)
  return details_;
}
inline void Location::set_allocated_details(::retail::yca::LocationDetails* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.Location.details)
}

// -------------------------------------------------------------------

// PersonData

// .retail.yca.Location loc = 1;
inline bool PersonData::has_loc() const {
  return this != internal_default_instance() && loc_ != NULL;
}
inline void PersonData::clear_loc() {
  if (GetArenaNoVirtual() == NULL && loc_ != NULL) {
    delete loc_;
  }
  loc_ = NULL;
}
inline const ::retail::yca::Location& PersonData::loc() const {
  const ::retail::yca::Location* p = loc_;
  // @@protoc_insertion_point(field_get:retail.yca.PersonData.loc)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::Location*>(
      &::retail::yca::_Location_default_instance_);
}
inline ::retail::yca::Location* PersonData::release_loc() {
  // @@protoc_insertion_point(field_release:retail.yca.PersonData.loc)
  
  ::retail::yca::Location* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline ::retail::yca::Location* PersonData::mutable_loc() {
  
  if (loc_ == NULL) {
    loc_ = new ::retail::yca::Location;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.PersonData.loc)
  return loc_;
}
inline void PersonData::set_allocated_loc(::retail::yca::Location* loc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loc_;
  }
  if (loc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc, submessage_arena);
    }
    
  } else {
    
  }
  loc_ = loc;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.PersonData.loc)
}

// int64 ts = 2;
inline void PersonData::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PersonData::ts() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonData.ts)
  return ts_;
}
inline void PersonData::set_ts(::google::protobuf::int64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonData.ts)
}

// int64 id = 3;
inline void PersonData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PersonData::id() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonData.id)
  return id_;
}
inline void PersonData::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.PersonData.id)
}

// string image = 4;
inline void PersonData::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PersonData::image() const {
  // @@protoc_insertion_point(field_get:retail.yca.PersonData.image)
  return image_.GetNoArena();
}
inline void PersonData::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:retail.yca.PersonData.image)
}
#if LANG_CXX11
inline void PersonData::set_image(::std::string&& value) {
  
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:retail.yca.PersonData.image)
}
#endif
inline void PersonData::set_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:retail.yca.PersonData.image)
}
inline void PersonData::set_image(const char* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:retail.yca.PersonData.image)
}
inline ::std::string* PersonData::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:retail.yca.PersonData.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PersonData::release_image() {
  // @@protoc_insertion_point(field_release:retail.yca.PersonData.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PersonData::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:retail.yca.PersonData.image)
}

// -------------------------------------------------------------------

// EmployeeData

// .retail.yca.PersonData data = 1;
inline bool EmployeeData::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void EmployeeData::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::retail::yca::PersonData& EmployeeData::data() const {
  const ::retail::yca::PersonData* p = data_;
  // @@protoc_insertion_point(field_get:retail.yca.EmployeeData.data)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::PersonData*>(
      &::retail::yca::_PersonData_default_instance_);
}
inline ::retail::yca::PersonData* EmployeeData::release_data() {
  // @@protoc_insertion_point(field_release:retail.yca.EmployeeData.data)
  
  ::retail::yca::PersonData* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::retail::yca::PersonData* EmployeeData::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::retail::yca::PersonData;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.EmployeeData.data)
  return data_;
}
inline void EmployeeData::set_allocated_data(::retail::yca::PersonData* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.EmployeeData.data)
}

// .retail.yca.EmployeeAction action = 2;
inline void EmployeeData::clear_action() {
  action_ = 0;
}
inline ::retail::yca::EmployeeAction EmployeeData::action() const {
  // @@protoc_insertion_point(field_get:retail.yca.EmployeeData.action)
  return static_cast< ::retail::yca::EmployeeAction >(action_);
}
inline void EmployeeData::set_action(::retail::yca::EmployeeAction value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.EmployeeData.action)
}

// .retail.yca.PersonDetails details = 3;
inline bool EmployeeData::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void EmployeeData::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
inline const ::retail::yca::PersonDetails& EmployeeData::details() const {
  const ::retail::yca::PersonDetails* p = details_;
  // @@protoc_insertion_point(field_get:retail.yca.EmployeeData.details)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::PersonDetails*>(
      &::retail::yca::_PersonDetails_default_instance_);
}
inline ::retail::yca::PersonDetails* EmployeeData::release_details() {
  // @@protoc_insertion_point(field_release:retail.yca.EmployeeData.details)
  
  ::retail::yca::PersonDetails* temp = details_;
  details_ = NULL;
  return temp;
}
inline ::retail::yca::PersonDetails* EmployeeData::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::retail::yca::PersonDetails;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.EmployeeData.details)
  return details_;
}
inline void EmployeeData::set_allocated_details(::retail::yca::PersonDetails* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.EmployeeData.details)
}

// -------------------------------------------------------------------

// CustomerDetails

// .retail.yca.CustomerDetails.CustomerMood mood = 1;
inline void CustomerDetails::clear_mood() {
  mood_ = 0;
}
inline ::retail::yca::CustomerDetails_CustomerMood CustomerDetails::mood() const {
  // @@protoc_insertion_point(field_get:retail.yca.CustomerDetails.mood)
  return static_cast< ::retail::yca::CustomerDetails_CustomerMood >(mood_);
}
inline void CustomerDetails::set_mood(::retail::yca::CustomerDetails_CustomerMood value) {
  
  mood_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.CustomerDetails.mood)
}

// -------------------------------------------------------------------

// CustomerData

// .retail.yca.PersonData data = 1;
inline bool CustomerData::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void CustomerData::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::retail::yca::PersonData& CustomerData::data() const {
  const ::retail::yca::PersonData* p = data_;
  // @@protoc_insertion_point(field_get:retail.yca.CustomerData.data)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::PersonData*>(
      &::retail::yca::_PersonData_default_instance_);
}
inline ::retail::yca::PersonData* CustomerData::release_data() {
  // @@protoc_insertion_point(field_release:retail.yca.CustomerData.data)
  
  ::retail::yca::PersonData* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::retail::yca::PersonData* CustomerData::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::retail::yca::PersonData;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.CustomerData.data)
  return data_;
}
inline void CustomerData::set_allocated_data(::retail::yca::PersonData* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.CustomerData.data)
}

// .retail.yca.AttentionDirection direction = 2;
inline void CustomerData::clear_direction() {
  direction_ = 0;
}
inline ::retail::yca::AttentionDirection CustomerData::direction() const {
  // @@protoc_insertion_point(field_get:retail.yca.CustomerData.direction)
  return static_cast< ::retail::yca::AttentionDirection >(direction_);
}
inline void CustomerData::set_direction(::retail::yca::AttentionDirection value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.CustomerData.direction)
}

// .retail.yca.CustomerDetails details = 3;
inline bool CustomerData::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void CustomerData::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
inline const ::retail::yca::CustomerDetails& CustomerData::details() const {
  const ::retail::yca::CustomerDetails* p = details_;
  // @@protoc_insertion_point(field_get:retail.yca.CustomerData.details)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::CustomerDetails*>(
      &::retail::yca::_CustomerDetails_default_instance_);
}
inline ::retail::yca::CustomerDetails* CustomerData::release_details() {
  // @@protoc_insertion_point(field_release:retail.yca.CustomerData.details)
  
  ::retail::yca::CustomerDetails* temp = details_;
  details_ = NULL;
  return temp;
}
inline ::retail::yca::CustomerDetails* CustomerData::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::retail::yca::CustomerDetails;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.CustomerData.details)
  return details_;
}
inline void CustomerData::set_allocated_details(::retail::yca::CustomerDetails* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.CustomerData.details)
}

// -------------------------------------------------------------------

// SalesDetails

// int32 store = 1;
inline void SalesDetails::clear_store() {
  store_ = 0;
}
inline ::google::protobuf::int32 SalesDetails::store() const {
  // @@protoc_insertion_point(field_get:retail.yca.SalesDetails.store)
  return store_;
}
inline void SalesDetails::set_store(::google::protobuf::int32 value) {
  
  store_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.SalesDetails.store)
}

// int64 ts = 2;
inline void SalesDetails::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SalesDetails::ts() const {
  // @@protoc_insertion_point(field_get:retail.yca.SalesDetails.ts)
  return ts_;
}
inline void SalesDetails::set_ts(::google::protobuf::int64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.SalesDetails.ts)
}

// -------------------------------------------------------------------

// SalesData

// repeated int32 products = 1;
inline int SalesData::products_size() const {
  return products_.size();
}
inline void SalesData::clear_products() {
  products_.Clear();
}
inline ::google::protobuf::int32 SalesData::products(int index) const {
  // @@protoc_insertion_point(field_get:retail.yca.SalesData.products)
  return products_.Get(index);
}
inline void SalesData::set_products(int index, ::google::protobuf::int32 value) {
  products_.Set(index, value);
  // @@protoc_insertion_point(field_set:retail.yca.SalesData.products)
}
inline void SalesData::add_products(::google::protobuf::int32 value) {
  products_.Add(value);
  // @@protoc_insertion_point(field_add:retail.yca.SalesData.products)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SalesData::products() const {
  // @@protoc_insertion_point(field_list:retail.yca.SalesData.products)
  return products_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SalesData::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:retail.yca.SalesData.products)
  return &products_;
}

// int32 customer = 2;
inline void SalesData::clear_customer() {
  customer_ = 0;
}
inline ::google::protobuf::int32 SalesData::customer() const {
  // @@protoc_insertion_point(field_get:retail.yca.SalesData.customer)
  return customer_;
}
inline void SalesData::set_customer(::google::protobuf::int32 value) {
  
  customer_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.SalesData.customer)
}

// int32 employee = 3;
inline void SalesData::clear_employee() {
  employee_ = 0;
}
inline ::google::protobuf::int32 SalesData::employee() const {
  // @@protoc_insertion_point(field_get:retail.yca.SalesData.employee)
  return employee_;
}
inline void SalesData::set_employee(::google::protobuf::int32 value) {
  
  employee_ = value;
  // @@protoc_insertion_point(field_set:retail.yca.SalesData.employee)
}

// .retail.yca.SalesDetails details = 4;
inline bool SalesData::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void SalesData::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
inline const ::retail::yca::SalesDetails& SalesData::details() const {
  const ::retail::yca::SalesDetails* p = details_;
  // @@protoc_insertion_point(field_get:retail.yca.SalesData.details)
  return p != NULL ? *p : *reinterpret_cast<const ::retail::yca::SalesDetails*>(
      &::retail::yca::_SalesDetails_default_instance_);
}
inline ::retail::yca::SalesDetails* SalesData::release_details() {
  // @@protoc_insertion_point(field_release:retail.yca.SalesData.details)
  
  ::retail::yca::SalesDetails* temp = details_;
  details_ = NULL;
  return temp;
}
inline ::retail::yca::SalesDetails* SalesData::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::retail::yca::SalesDetails;
  }
  // @@protoc_insertion_point(field_mutable:retail.yca.SalesData.details)
  return details_;
}
inline void SalesData::set_allocated_details(::retail::yca::SalesDetails* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:retail.yca.SalesData.details)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace yca
}  // namespace retail

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::retail::yca::PersonDetails_Gender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::retail::yca::PersonDetails_Gender>() {
  return ::retail::yca::PersonDetails_Gender_descriptor();
}
template <> struct is_proto_enum< ::retail::yca::CustomerDetails_CustomerMood> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::retail::yca::CustomerDetails_CustomerMood>() {
  return ::retail::yca::CustomerDetails_CustomerMood_descriptor();
}
template <> struct is_proto_enum< ::retail::yca::CustomerDetails_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::retail::yca::CustomerDetails_Action>() {
  return ::retail::yca::CustomerDetails_Action_descriptor();
}
template <> struct is_proto_enum< ::retail::yca::AttentionDirection> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::retail::yca::AttentionDirection>() {
  return ::retail::yca::AttentionDirection_descriptor();
}
template <> struct is_proto_enum< ::retail::yca::EmployeeAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::retail::yca::EmployeeAction>() {
  return ::retail::yca::EmployeeAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_analytic_2eproto__INCLUDED
